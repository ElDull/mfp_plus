# -*- coding: utf-8 -*-
"""scrape_mfp

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t5RhMk3_yGNNY07FLqH4JQjiG-Me4NzF

Install and import the necessary libraries for scraping the website
"""
import requests
import mechanicalsoup
import json
import importlib
from sys import path
path.append('/home/eli/fun/self/passman')
from passman import get_for_service

BASE_URL = "https://www.myfitnesspal.com"

browser = mechanicalsoup.StatefulBrowser()
def get_all():
  return {"totals": get_totals(), "exercise":get_exercise(), "measurements":get_measurements()}
def login(master_password):
  try:
    creds = get_for_service('mfp', master_password)
  except:
    return "Wrong password, please try again"
  username = list(creds)[0]
  password = creds[username]

  browser.open(f"{BASE_URL}/account/login")

  browser.select_form('form[class="form login LoginForm"]')
  browser['username'] = username
  browser['password'] = password
  browser.submit_selected()

  return "" 


links = {"food":'/food/diary/',
 "exercise":'/exercise/diary/',
 "measurements":'/measurements/check_in',}

# get calorie totals
def get_totals():
  browser.open(f"{BASE_URL}{links['food']}")
  totals = browser.page.find("tr", attrs={"class":'total'})
  values = [i.text.replace("\n", "").split()[0] for i in totals.find_all("td") if len(i) > 0][1:]
  titles = ["calories", "carbs","fat", "protein", "fiber", "sugar"]
  mapped = {k:int(v.replace(',','')) for k,v in zip(titles,values)}
  return mapped


# get excercise expenditure totals
def get_exercise():
  browser.open(f"{BASE_URL}{links['exercise']}")
  return int(browser.page.find_all("span", attrs={"class":'soFar'})[2].text.strip())

# get measurements
def get_measurements():
  browser.open(f"{BASE_URL}{links['measurements']}")
  weight_string = [i.text.replace('\n', "").replace('\t', "").strip().split() for i in browser.page.find_all("span") if "Last recorded weight" in i.text][0][3]
  weight = float(weight_string)

  titles = [i.text for i in browser.page.find_all("td", attrs={"class":"first"})[1:]]
  values = [i.text.replace("\n", "").replace("\t", "").split()[0] for i in browser.page.find_all("td", attrs={"class":"col-num"})[2:]]
  dates = [i.text.replace("\n", "").replace("\t", "").split()[2] for i in browser.page.find_all("td", attrs={"class":"col-num"})[2:]]
  vals = [(float(x),y) for x,y in zip(values, dates)]
  mapped = {k:v for k,v in zip(titles, vals)}
  return mapped